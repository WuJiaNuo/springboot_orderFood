{"remainingRequest":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\project\\ksmg\\basemf-sig\\exam_vue\\src\\views\\pages\\log\\sysLoginLog.vue?vue&type=style&index=0&id=29e54870&lang=css&","dependencies":[{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\src\\views\\pages\\log\\sysLoginLog.vue","mtime":1682917585358},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655715156000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRlbW8tdGFibGUtZXhwYW5kIHsKICAgIGZvbnQtc2l6ZTogMDsKfQouZGVtby10YWJsZS1leHBhbmQgbGFiZWwgewogICAgd2lkdGg6IDkwcHg7CiAgICBjb2xvcjogIzk5YTliZjsKfQouZGVtby10YWJsZS1leHBhbmQgLmVsLWZvcm0taXRlbSB7CiAgICBtYXJnaW4tcmlnaHQ6IDA7CiAgICBtYXJnaW4tYm90dG9tOiAwOwogICAgd2lkdGg6IDUwJTsKfQo="},{"version":3,"sources":["sysLoginLog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sysLoginLog.vue","sourceRoot":"src/views/pages/log","sourcesContent":["<template>\n        <div class=\"app-container\">\n        <div class=\"search-div\">\n            <el-form label-width=\"70px\" size=\"small\">\n                <el-row>\n                            <el-col :span=\"8\">\n                                <el-form-item label=\"用户账号\">\n                                        <el-input v-model=\"searchObj.username\" placeholder=\"用户账号\" clearable/>\n                                </el-form-item>\n                            </el-col>\n                </el-row>\n                <el-row style=\"display:flex\">\n                    <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"fetchData()\">搜索</el-button>\n                    <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetData\">重置</el-button>\n                </el-row>\n            </el-form>\n        </div>\n        <!-- 列表 -->\n        <el-table\n                v-loading=\"listLoading\"\n                :data=\"list\"\n                :row-key=\"getRowKeys\"\n                stripe\n                border\n                style=\"width: 100%;margin-top: 10px;\"\n                @selection-change=\"handleSelectionChange\">\n            <el-table-column\n                    label=\"序号\"\n                    width=\"70\"\n                    align=\"center\">\n                <template slot-scope=\"scope\">\n                    {{ (page - 1) * limit + scope.$index + 1 }}\n                </template>\n            </el-table-column>\n            <el-table-column type=\"selection\"  :reserve-selection=\"true\"/>\n                        <el-table-column sortable prop=\"username\" label=\"用户账号\"/>\n                        <el-table-column sortable prop=\"ipaddr\" label=\"登录IP地址\"/>\n                        <el-table-column sortable prop=\"status\" label=\"登录状态（0成功 1失败）\"/>\n                        <el-table-column sortable prop=\"msg\" label=\"提示信息\"/>\n                        <el-table-column sortable prop=\"accessTime\" label=\"访问时间\"/>\n                        <el-table-column sortable prop=\"createTime\" label=\"创建时间\"/>\n                        <el-table-column sortable prop=\"updateTime\" label=\"修改时间\"/>\n                                <el-table-column type=\"expand\" label=\"...\">\n                                    <template slot-scope=\"props\">\n                                        <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                                                    <el-form-item label=\"用户账号\">\n                                                        <span>{{ props.row.username }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"登录IP地址\">\n                                                        <span>{{ props.row.ipaddr }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"登录状态（0成功 1失败）\">\n                                                        <span>{{ props.row.status }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"提示信息\">\n                                                        <span>{{ props.row.msg }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"访问时间\">\n                                                        <span>{{ props.row.accessTime }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"创建时间\">\n                                                        <span>{{ props.row.createTime }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"修改时间\">\n                                                        <span>{{ props.row.updateTime }}</span>\n                                                    </el-form-item>\n                                        </el-form>\n                                    </template>\n                                </el-table-column>\n        </el-table>\n        <!-- 分页组件 -->\n        <el-pagination\n                @size-change=\"sizeChangeHandle\"\n                :current-page=\"page\"\n                :total=\"total\"\n                :page-size=\"limit\"\n                style=\"padding: 30px 0; text-align: center;\"\n                :page-sizes=\"[5, 10, 50, 100]\"\n                layout=\"total,sizes, prev, pager, next, jumper\"\n                @current-change=\"fetchData\"\n        />\n        <el-dialog title=\"添加/修改\" :visible.sync=\"dialogVisible\" width=\"40%\">\n            <el-form ref=\"dataForm\" :model=\"sysLoginLog\" :rules=\"rules\" label-width=\"100px\" size=\"small\"\n                     style=\"padding-right: 40px;\">\n                    <el-form-item label=\"用户账号\" prop=\"username\">\n                                <el-input v-model=\"sysLoginLog.username\" clearable/>\n                    </el-form-item>\n                    <el-form-item label=\"登录IP地址\" prop=\"ipaddr\">\n                                <el-input v-model=\"sysLoginLog.ipaddr\" clearable/>\n                    </el-form-item>\n                    <el-form-item label=\"登录状态（0成功 1失败）\" prop=\"status\">\n                                <el-input v-model=\"sysLoginLog.status\" clearable/>\n                    </el-form-item>\n                    <el-form-item label=\"提示信息\" prop=\"msg\">\n                                <el-input v-model=\"sysLoginLog.msg\" clearable/>\n                    </el-form-item>\n                    <el-form-item label=\"访问时间\" prop=\"accessTime\">\n                                <el-date-picker\n                                        v-model=\"sysLoginLog.accessTime\"\n                                        type=\"date\"\n                                        placeholder=\"选择日期\">\n                                </el-date-picker>\n                    </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\" size=\"small\" icon=\"el-icon-refresh-right\">取 消</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-check\" @click=\"saveOrUpdate()\" size=\"small\">确 定</el-button>\n      </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\n    import api from '@/api/log/sysLoginLog'\n    const defaultForm = {\n    }\n    export default {\n        components: {\n        },\n        data() {\n            return {\n                listLoading: true, // 数据是否正在加载\n                list: [], // banner列表\n                total: 0, // 数据库中的总记录数\n                page: 1, // 默认页码\n                limit: 5, // 每页记录数\n                searchObj: {}, // 查询表单对象\n                dialogVisible: false,\n                sysLoginLog:defaultForm,\n                saveBtnDisabled:false,\n                selectValue:[] //复选框选择内容封装数组\n                , rules:{\n            }\n        }\n        },\n        // 生命周期函数：内存准备完毕，页面尚未渲染\n        created() {\n            console.log('list created......')\n            this.fetchData()\n        },\n        // 生命周期函数：内存准备完毕，页面渲染成功\n        mounted() {\n            console.log('list mounted......')\n        },\n        methods: {\n            getRowKeys(row) {\n                return row.id\n            },\n            // 每页数\n            sizeChangeHandle(val) {\n                this.limit = val;\n                this.page = 1;\n                this.fetchData(this.page);\n            },\n            // 加载banner列表数据\n            fetchData(page = 1) {\n                debugger\n                this.page = page\n                api.getPageList(this.page, this.limit, this.searchObj).then(\n                    response => {\n                        //this.list = response.data.list\n                        this.list = response.data.records\n                        this.total = response.data.total\n                        // 数据加载并绑定成功\n                        this.listLoading = false\n                    }\n                )\n            },\n            // 重置查询表单\n            resetData() {\n                console.log('重置查询表单')\n                this.searchObj = {}\n                this.fetchData()\n            },\n            // 根据id删除数据\n            removeDataById(id) {\n                // debugger\n                this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => { // promise\n                    // 点击确定，远程调用ajax\n                    return api.removeById(id)\n                }).then((response) => {\n                    this.fetchData(this.page)\n                    this.$message.success(response.message || '删除成功')\n                }).catch(() => {\n                    this.$message.info('取消删除')\n                })\n            },\n            //复选框发生变化执行方法\n            handleSelectionChange(selection) {\n                this.selectValue = selection\n                //console.log(this.selectValue)\n            },\n            //批量删除\n            batchRemove() {\n                //判断\n                if (this.selectValue.length == 0) {\n                    this.$message.warning('请选择要删除的记录！')\n                    return\n                }\n                this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    //数组\n                    var idList = []\n                    //获取多个复选框对应id，封装到数组里面\n                    // [1,2,3]\n                    for (var i = 0; i < this.selectValue.length; i++) {\n                        var obj = this.selectValue[i]\n                        //id值\n                        var id = obj.id\n                        //放到数组里面\n                        idList.push(id)\n                    }\n                    api.batchRemove(idList).then(response => {\n                        //提示\n                        this.$message({\n                            type: 'success',\n                            message: '删除成功!'\n                        });\n                        //刷新\n                        this.fetchData()\n                    })\n                })\n            },\n            //弹出添加表单\n            add() {\n                this.dialogVisible = true\n                this.sysLoginLog = {\n                }\n            },\n            //编辑\n            edit(id) {\n                this.dialogVisible = true\n                api.getById(id).then(response => {\n                    this.$nextTick(function () {\n                        this.sysLoginLog = response.data\n                        if(this.$refs.eltreeDept){\n                            this.$refs.eltreeDept.setCheckedKeys(this.sysLoginLog.deptIdList);\n                        }\n                    })\n                })\n            },\n            //添加或更新\n            saveOrUpdate() {\n                this.$refs.dataForm.validate(valid => {\n                    if (valid) {\n                        if (!this.sysLoginLog.id) {\n                            this.save()\n                        } else {\n                            this.update()\n                        }\n                    }\n                })\n            },\n            //添加\n            save() {\n                api.save(this.sysLoginLog).then(response => {\n                    this.$message.success('操作成功')\n                    this.dialogVisible = false\n                    this.fetchData(this.page)\n                })\n            },\n            //更新\n            update() {\n                api.updateById(this.sysLoginLog).then(response => {\n                    this.$message.success(response.message || '操作成功')\n                    this.dialogVisible = false\n                    this.fetchData(this.page)\n                })\n            }\n        }\n    }\n</script>\n<style>\n    .demo-table-expand {\n        font-size: 0;\n    }\n    .demo-table-expand label {\n        width: 90px;\n        color: #99a9bf;\n    }\n    .demo-table-expand .el-form-item {\n        margin-right: 0;\n        margin-bottom: 0;\n        width: 50%;\n    }\n</style>\n"]}]}

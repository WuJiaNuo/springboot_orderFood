{"remainingRequest":"F:\\project\\ksmg\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\project\\ksmg\\exam-vue\\src\\views\\pages\\myExam.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\project\\ksmg\\exam-vue\\src\\views\\pages\\myExam.vue","mtime":1699605554180},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
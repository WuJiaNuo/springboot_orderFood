{"remainingRequest":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\project\\ksmg\\basemf-sig\\exam_vue\\src\\views\\pages\\business\\tbQuestion.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\src\\views\\pages\\business\\tbQuestion.vue","mtime":1698853116914},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["tbQuestion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tbQuestion.vue","sourceRoot":"src/views/pages/business","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"search-div\">\n      <el-form label-width=\"70px\" size=\"small\">\n        <el-row>\n          <el-col :span=\"5\">\n            <el-form-item label=\"题目内容\">\n              <el-input v-model=\"searchObj.content\" placeholder=\"题目内容\" clearable/>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"5\">\n            <el-form-item label=\"题目类型\">\n              <!--              <el-radio v-model=\"searchObj.type\"\n                                      v-for=\"l in sysDicItemXdicCode4000List\"\n                                      :label=\"l.code\">{{ l.name }}\n                            </el-radio>-->\n              <el-select v-model=\"searchObj.type\" placeholder=\"题目类型\">\n                <el-option v-for=\"l in sysDicItemXdicCode4000List\" :label=\"l.name\" :value=\"l.code\"\n                           :key=\"l.code\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"5\">\n            <el-form-item label=\"部门\">\n              <el-input v-model=\"searchObj.deptName\"\n                        placeholder=\"部门名称\" clearable/>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n        <el-row style=\"display:flex\">\n          <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"fetchData()\">搜索</el-button>\n          <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetData\">重置</el-button>\n        </el-row>\n      </el-form>\n    </div>\n    <!-- 工具条 -->\n    <div class=\"tools-div\">\n      <el-button type=\"success\" icon=\"el-icon-plus\" size=\"mini\" @click=\"add\"\n                 :disabled=\"$hasBP('bnt.tbQuestion.add')  === false\">添 加\n      </el-button>\n      <el-button class=\"btn-add\" size=\"mini\" @click=\"batchRemove()\"\n                 :disabled=\"$hasBP('bnt.tbQuestion.remove')  === false\">批量删除\n      </el-button>\n\n      <!--上传文件-->\n      <el-upload\n        class=\"upload-demo\"\n        action=\"#\"\n        :on-preview=\"handlePreview\"\n        :on-remove=\"handleRemove\"\n        :before-remove=\"beforeRemove\"\n        multiple\n        :limit=\"1\"\n        :on-exceed=\"handleExceed\"\n        :file-list=\"fileList\"\n        :show-file-list=\"false\"\n        :http-request=\"uploadFile\"\n      >\n\n        <el-button size=\"mini\" :disabled=\"$hasBP('bnt.sysUser.add')  === false\" type=\"primary\">导入数据</el-button>\n\n        <span style=\"margin-left:4px;color: red\" slot=\"tip\" class=\"el-upload__tip\"><a :href=\"dowTempPath\"\n                                                                           target=\"_blank\">下载导入模板</a></span>\n      </el-upload>\n\n      <el-button style=\"margin-left:8px\" size=\"mini\" :disabled=\"$hasBP('bnt.tbQuestion.list')  === false\" type=\"primary\"\n                 @click=\"exportData\">导出数据\n      </el-button>\n    </div>\n    <!-- 列表 -->\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      :row-key=\"getRowKeys\"\n      stripe\n      border\n      style=\"width: 100%;margin-top: 10px;\"\n      @selection-change=\"handleSelectionChange\">\n      <el-table-column\n        label=\"序号\"\n        width=\"50%\"\n        align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ (page - 1) * limit + scope.$index + 1 }}\n        </template>\n      </el-table-column>\n      <el-table-column type=\"selection\" :reserve-selection=\"true\"/>\n      <el-table-column sortable prop=\"deptName\" label=\"部门名称\" show-overflow-tooltip=\"true\"/>\n      <el-table-column sortable prop=\"score\" label=\"题目分数\" show-overflow-tooltip=\"true\"/>\n      <el-table-column sortable prop=\"typeName\" label=\"题目类型\" show-overflow-tooltip=\"true\"/>\n      <el-table-column sortable prop=\"content\" label=\"题目内容\" show-overflow-tooltip=\"true\"/>\n      <el-table-column sortable prop=\"remark\" label=\"备注\" show-overflow-tooltip=\"true\"/>\n      <el-table-column sortable prop=\"createTime\" label=\"创建时间\" show-overflow-tooltip=\"true\"/>\n      <el-table-column sortable label=\"所属试卷\" show-overflow-tooltip=\"true\">\n        <template slot-scope=\"scope\">\n          <TbExamView :questionId=\"scope.row.id\"></TbExamView>\n        </template>\n      </el-table-column>\n      <el-table-column type=\"expand\" label=\"...\">\n        <template slot-scope=\"props\">\n          <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n            <el-form-item label=\"部门名称\">\n              <span>{{ props.row.deptName }}</span>\n            </el-form-item>\n            <el-form-item label=\"题目分数\">\n              <span>{{ props.row.score }}</span>\n            </el-form-item>\n            <el-form-item label=\"题目类型\">\n              <span>{{ props.row.typeName }}</span>\n            </el-form-item>\n            <el-form-item label=\"题目内容\">\n              <span>{{ props.row.content }}</span>\n            </el-form-item>\n            <el-form-item label=\"备注\">\n              <span>{{ props.row.remark }}</span>\n            </el-form-item>\n            <el-form-item label=\"创建时间\">\n              <span>{{ props.row.createTime }}</span>\n            </el-form-item>\n            <el-form-item label=\"更新时间\">\n              <span>{{ props.row.updateTime }}</span>\n            </el-form-item>\n            <el-form-item label=\"所属试卷\">\n              <span><TbExamView :questionId=\"props.row.id\"></TbExamView></span>\n            </el-form-item>\n          </el-form>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"edit(scope.row.id)\"\n                     :disabled=\"$hasBP('bnt.tbQuestion.update')  === false\" title=\"修改\"/>\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeDataById(scope.row.id)\"\n                     :disabled=\"$hasBP('bnt.tbQuestion.remove')  === false\" title=\"删除\"/>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 分页组件 -->\n    <el-pagination\n      @size-change=\"sizeChangeHandle\"\n      :current-page=\"page\"\n      :total=\"total\"\n      :page-size=\"limit\"\n      style=\"padding: 30px 0; text-align: center;\"\n      :page-sizes=\"[5, 10, 50, 100]\"\n      layout=\"total,sizes, prev, pager, next, jumper\"\n      @current-change=\"fetchData\"\n    />\n    <el-dialog title=\"添加/修改\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisible\" width=\"40%\">\n      <el-form ref=\"dataForm\" :model=\"tbQuestion\" :rules=\"rules\" label-width=\"100px\" size=\"small\"\n               style=\"padding-right: 40px;\">\n        <el-form-item label=\"部门\" prop=\"deptId\">\n          <select-dept-tree ref=\"zdept\" @saveTreeId=\"saveDeptId\" treeTitle=\"选择部门\" :isLazy=\"false\"\n                            :dataTree=\"dataDeptTree\"\n                            :treeVal=\"tbQuestion.deptName\" :treeId=\"tbQuestion.deptId\"></select-dept-tree>\n        </el-form-item>\n        <el-form-item label=\"题目分数\" prop=\"score\">\n          <el-input-number :min=\"0\" v-model=\"tbQuestion.score\" controls-position=\"right\" clearable/>\n        </el-form-item>\n        <el-form-item label=\"题目类型\" prop=\"type\">\n          <el-radio-group v-model=\"tbQuestion.type\" size=\"small\">\n            <el-radio v-for=\"l in sysDicItemXdicCode4000List\" :label=\"l.code\">{{ l.name }}\n            </el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"题目内容\" prop=\"content\" >\n          <el-input v-model=\"tbQuestion.content\" type=\"textarea\" :rows=\"4\" clearable/>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"remark\">\n          <el-input v-model=\"tbQuestion.remark\" clearable/>\n        </el-form-item>\n        <el-form-item label=\"选择试卷\" prop=\"examId\">\n          <TbExamSelect\n            :myvals=\"tbQuestion.examIdList\"\n            @getInfo=\"getTbExamX90785f25\" :single=\"false\" where=\"\"/>\n        </el-form-item>\n        <el-form-item id=\"xzxx\" v-show=\"tbQuestion.type!='4004'\">\n          <el-button @click=\"addItem\">新增选项</el-button>\n        </el-form-item>\n        <el-form-item label=\"正确答案\" id=\"tkRight\" v-show=\"tbQuestion.type=='4004'\">\n          <el-input type=\"textarea\" :rows=\"3\" v-model=\"tbQuestion.answer\" clearable/>\n        </el-form-item>\n        <el-form-item v-for=\"(item, index) in tbQuestion.optionList\"\n                      :label=\"'选项' + index\">\n          <el-input v-model=\"item.options\" placeholder=\"选项\"></el-input>\n          <el-input style=\"margin-top: 5px\" v-model=\"item.name\" placeholder=\"选项内容\"></el-input>\n          <el-radio-group style=\"margin-top: 5px\" v-model=\"item.isRight\">\n            <el-radio :label=\"1\">正确</el-radio>\n            <el-radio :label=\"0\">错误</el-radio>\n          </el-radio-group>\n          <el-button style=\"margin-left: 10px\" @click=\"deleteItem(index)\" type=\"primary\"\n                     icon=\"el-icon-delete\"></el-button>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\" size=\"small\" icon=\"el-icon-refresh-right\">取 消</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-check\" @click=\"saveOrUpdate()\" size=\"small\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport {getToken} from '@/utils/auth'\nimport api from '@/api/business/tbQuestion'\nimport sysDicItemApi from '@/api/system/sysDicItem'\nimport sysDeptApi from '@/api/system/sysDept'\nimport TbExamSelect from './tbQuestionTbExamSelect'\nimport TbExamView from './tbQuestionTbExamView'\n\n\nexport default {\n  components: {\n    TbExamSelect,\n    TbExamView,\n    SelectDeptTree: () => import('@/components/Custom/TreeSelect/TreeSelect')\n  },\n  data() {\n    return {\n      dowTempPath: process.env.VUE_APP_BASE_API + '/temp/tbquestion.xlsx',\n      listLoading: true, // 数据是否正在加载\n      list: [], // banner列表\n      total: 0, // 数据库中的总记录数\n      page: 1, // 默认页码\n      limit: 5, // 每页记录数\n      searchObj: {}, // 查询表单对象\n      dialogVisible: false,\n      tbQuestion: {optionList: []},\n      saveBtnDisabled: false,\n      selectValue: [] //复选框选择内容封装数组\n      , sysDicItemXdicCode4000List: []\n      , dataDeptTree: [],//树形选择数据\n      curDept: '',\n      curDeptName: ''\n      , rules: {\n\n        content:\n          [\n            {required: true, message: '请输入题目内容', trigger: 'blur'}\n          ]\n        ,\n        score:\n          [\n            {required: true, message: '请输入题目分数', trigger: 'blur'}\n          ]\n        ,\n        type:\n          [\n            {required: true, message: '请选择题目类型', trigger: 'blur'}\n          ]\n        ,\n        deptId:\n          [\n            {required: true, message: '请输入部门', trigger: 'blur'}\n          ]\n      }\n\n    }\n  },\n  // 生命周期函数：内存准备完毕，页面尚未渲染\n  created() {\n    console.log('list created......')\n    this.fetchData()\n    this.getAllSysDicItemXdicCode4000()\n    this.fetchPopDept()\n  },\n  // 生命周期函数：内存准备完毕，页面渲染成功\n  mounted() {\n    console.log('list mounted......')\n  },\n  methods: {\n\n    //上传文件begin\n    handleRemove(file, fileList) {\n      console.log(file, fileList);\n    },\n    handlePreview(file) {\n      console.log(file);\n    },\n    handleExceed(files, fileList) {\n      this.$message.warning(`一次只能选择一个文件`);\n    },\n    beforeRemove(file, fileList) {\n      return this.$confirm(`确定移除 ${file.name}？`);\n    },\n\n    //参数必须是param，才能获取到内容\n    uploadFile(param) {\n      // 获取上传的文件名\n      var file = param.file\n      //发送请求的参数格式为FormData\n      const formData = new FormData();\n      formData.append(\"file\", file)\n      api.uploadFile(formData)\n        .then((res) => {\n          if (res.code == 200) {\n            //提示\n            this.$message({\n              type: 'success',\n              message: '导入成功!'\n            });\n            this.fetchData(this.page);\n            this.fileList = []\n          }\n          //this.refs.upload.clearFiles();\n        })\n        .catch((err) => {\n          this.fileList = []\n        });\n    },\n\n\n    //上传文件end\n\n    getRowKeys(row) {\n      return row.id\n    },\n    deleteItem(i) {\n      this.tbQuestion.optionList.splice(i, 1)\n    },\n    questionTypeChange(type) {\n      if (type == '4004') {\n        document.getElementById(\"xzxx\").style.display = 'none';\n        document.getElementById(\"tkRight\").style.display = 'block';\n        //this.tbQuestion.optionList = [];\n      } else {\n        document.getElementById(\"xzxx\").style.display = 'block';\n        document.getElementById(\"tkRight\").style.display = 'none';\n      }\n\n    },\n    addItem() {\n      this.tbQuestion.optionList.push({\n        option: \"\",\n        name: \"\",\n        isRight: \"\"\n      });\n    },\n    //导出数据\n    exportData() {\n      window.open(process.env.VUE_APP_BASE_API + '/business/tbQuestion/export?token=' + getToken());\n    },\n    // 每页数\n    sizeChangeHandle(val) {\n      this.limit = val;\n      this.page = 1;\n      this.fetchData(this.page);\n    },\n    getAllSysDicItemXdicCode4000() {\n      let queryObj = {}\n      queryObj = JSON.parse('{\"dicCode\":\"4000\"}')\n      sysDicItemApi.getAllSysDicItem(queryObj)\n        .then(response => {\n          this.sysDicItemXdicCode4000List = response.data\n        })\n    },\n    getTbExamX90785f25(selections) {\n      this.tbQuestion.examIdList = selections\n    },\n    //回调保存选择的部门id\n    saveDeptId(treeId, treeName) {\n      this.tbQuestion.deptId = treeId\n      this.$refs[\"dataForm\"].clearValidate(\"deptId\")\n      this.rules.deptId = []\n    },\n    fetchPopDept() {\n      //加载弹出选择部门数据\n      sysDeptApi.findSelectNodes().then(response => {\n        this.dataDeptTree = response.data\n      })\n    },\n    // 加载banner列表数据\n    fetchData(page = 1) {\n      debugger\n      this.page = page\n      api.getPageList(this.page, this.limit, this.searchObj).then(\n        response => {\n          //this.list = response.data.list\n          this.list = response.data.pageModel.records\n          this.total = response.data.pageModel.total\n          this.curDept=response.data.curDept;\n          this.curDeptName=response.data.curDeptName;\n          // 数据加载并绑定成功\n          this.listLoading = false\n        }\n      )\n    },\n    // 重置查询表单\n    resetData() {\n      console.log('重置查询表单')\n      this.searchObj = {}\n      this.fetchData()\n    },\n    // 根据id删除数据\n    removeDataById(id) {\n      // debugger\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => { // promise\n        // 点击确定，远程调用ajax\n        return api.removeById(id)\n      }).then((response) => {\n        this.fetchData(this.page)\n        this.$message.success(response.message || '删除成功')\n      }).catch(() => {\n        this.$message.info('取消删除')\n      })\n    },\n    //复选框发生变化执行方法\n    handleSelectionChange(selection) {\n      this.selectValue = selection\n      //console.log(this.selectValue)\n    },\n    //批量删除\n    batchRemove() {\n      //判断\n      if (this.selectValue.length == 0) {\n        this.$message.warning('请选择要删除的记录！')\n        return\n      }\n      this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //数组\n        var idList = []\n        //获取多个复选框对应id，封装到数组里面\n        // [1,2,3]\n        for (var i = 0; i < this.selectValue.length; i++) {\n          var obj = this.selectValue[i]\n          //id值\n          var id = obj.id\n          //放到数组里面\n          idList.push(id)\n        }\n        api.batchRemove(idList).then(response => {\n          //提示\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n          //刷新\n          this.fetchData()\n        })\n      })\n    },\n    //弹出添加表单\n    add(row) {\n      this.dialogVisible = true\n      this.tbQuestion = {optionList: []}\n      this.$nextTick(function(){\n        this.$refs.zdept.reset_data()\n        this.tbQuestion = {deptId:this.curDept,deptName:this.curDeptName,optionList: []}\n      })\n      this.rules.content = [{required: true, message: '请输入题目内容', trigger: 'blur'}]\n      this.rules.score = [{required: true, message: '请输入题目分数', trigger: 'blur'}]\n      this.rules.type = [{required: true, message: '请选择题目类型', trigger: 'blur'}]\n      this.rules.deptId = [{required: true, message: '请输入部门', trigger: 'blur'}]\n    },\n    //编辑\n    edit(id) {\n      this.dialogVisible = true\n      this.rules.content = [{required: true, message: '请输入题目内容', trigger: 'blur'}]\n      this.rules.score = [{required: true, message: '请输入题目分数', trigger: 'blur'}]\n      this.rules.type = [{required: true, message: '请选择题目类型', trigger: 'blur'}]\n      this.rules.deptId = [{required: true, message: '请输入部门', trigger: 'blur'}]\n      api.getById(id).then(response => {\n        this.$nextTick(function () {\n         this.tbQuestion = response.data\n         this.$refs.zdept.reset_data(this.tbQuestion.deptName)\n          // console.log('optionList')\n          // console.log(JSON.stringify(this.tbQuestion.optionList))\n          if (this.$refs.eltreeDept) {\n            this.$refs.eltreeDept.setCheckedKeys(this.tbQuestion.deptIdList);\n          }\n        })\n      })\n    },\n    //添加或更新\n    saveOrUpdate() {\n      this.$refs.dataForm.validate(valid => {\n        if (valid) {\n          if (!this.tbQuestion.id) {\n            this.save()\n          } else {\n            this.update()\n          }\n        }\n      })\n    },\n    //添加\n    save() {\n      api.save(this.tbQuestion).then(response => {\n        this.$message.success('操作成功')\n        this.dialogVisible = false\n        this.fetchData(this.page)\n      })\n    },\n    //更新\n    update() {\n      api.updateById(this.tbQuestion).then(response => {\n        this.$message.success(response.message || '操作成功')\n        this.dialogVisible = false\n        this.fetchData(this.page)\n      })\n    }\n  }\n}\n</script>\n<style>\n.demo-table-expand {\n  font-size: 0;\n}\n\n.demo-table-expand label {\n  width: 90px;\n  color: #99a9bf;\n}\n\n.demo-table-expand .el-form-item {\n  margin-right: 0;\n  margin-bottom: 0;\n  width: 50%;\n}\n</style>\n"]}]}

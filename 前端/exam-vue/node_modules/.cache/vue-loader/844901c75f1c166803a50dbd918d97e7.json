{"remainingRequest":"F:\\project\\ksmg\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\project\\ksmg\\exam-vue\\src\\views\\pages\\QuestionTbExamSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\project\\ksmg\\exam-vue\\src\\views\\pages\\QuestionTbExamSelect.vue","mtime":1699603596021},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUYkV4YW1TZWxlY3REaWFsb2cgZnJvbSAnLi9RdWVzdGlvblRiRXhhbVNlbGVjdERpYWxvZycKaW1wb3J0IHRiRXhhbUFwaSBmcm9tICdAL2FwaS9FeGFtJwpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhICgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBuYW1lOiAnJywKICAgICAgICAgICAgc2VsZWN0RGF0YTogW10sCiAgICAgICAgICAgIHRiRXhhbVNlcnZpY2U6IG51bGwKICAgICAgICB9CiAgICB9LAogICAgcHJvcHM6IHsKICAgICAgICBzaXplOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJ3NtYWxsJwogICAgICAgIH0sCiAgICAgICAgbXl2YWxzOiB7CiAgICAgICAgICAgIHR5cGU6IEFycmF5LAogICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgICAgICAgICByZXR1cm4gW107CiAgICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBidG5EaXNhYmxlZDogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgaW5wRGlzYWJsZWQ6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgc2luZ2xlOiB7ICAvLyDmmK/lkKblkK/nlKjljZXpgIkKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UKICAgICAgICB9LAogICAgICAgIHdoZXJlOiB7ICAvLyDmn6Xor6LmnaHku7YKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnJwogICAgICAgIH0KICAgIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgVGJFeGFtU2VsZWN0RGlhbG9nCiAgICB9LAogICAgY3JlYXRlZCAoKSB7CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICBteXZhbHM6IHsKICAgICAgICAgICAgaGFuZGxlciAobmV3VmFsKSB7CiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdERhdGEgPSBbXQogICAgICAgICAgICAgICAgaWYgKG5ld1ZhbCAmJiBuZXdWYWwubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIHRiRXhhbUFwaS5nZXRCeUlkcyhuZXdWYWwpLnRoZW4oCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5kYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3REYXRhID0gcmVzcG9uc2UuZGF0YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgICAgICAgIGRlZXA6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBzZWxlY3REYXRhOiB7CiAgICAgICAgICAgIGhhbmRsZXIgKG5ld1ZhbCkgewogICAgICAgICAgICAgICAgdGhpcy5uYW1lID0gbmV3VmFsLm1hcChpdGVtID0+IGl0ZW0udGl0bGUpLmpvaW4oJywnKQogICAgICAgICAgICB9LAogICAgICAgICAgICBpbW1lZGlhdGU6IGZhbHNlLAogICAgICAgICAgICBkZWVwOiBmYWxzZQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLy8g6K6+572u6YCJ5LitCiAgICAgICAgc2VsZWN0aW9uc1RvSW5wdXQgKHNlbGVjdGlvbnMpIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3REYXRhID0gc2VsZWN0aW9ucwogICAgICAgICAgICBsZXQgaWRMaXN0ID0gW10KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdERhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIHZhciBvYmogPSB0aGlzLnNlbGVjdERhdGFbaV0KICAgICAgICAgICAgICAgIC8vaWTlgLwKICAgICAgICAgICAgICAgIHZhciBpZCA9IG9iai5pZAogICAgICAgICAgICAgICAgLy/mlL7liLDmlbDnu4Tph4zpnaIKICAgICAgICAgICAgICAgIGlkTGlzdC5wdXNoKGlkKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2dldEluZm8nLCBpZExpc3QpCiAgICAgICAgfSwKICAgICAgICAvLyDmmL7npLrliJfooagKICAgICAgICBzaG93VXNlclNlbGVjdCAoKSB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMudGJFeGFtU2VsZWN0LmluaXQoKQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["QuestionTbExamSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionTbExamSelect.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\n    <div>\n        <el-input placeholder=\"请选择\" :size=\"size\" :disabled=\"inpDisabled\" style=\"line-hight:40px\" v-model=\"name\" class=\"input-with-select\">\n            <el-button slot=\"append\" :disabled=\"btnDisabled\" @click=\"showUserSelect\" icon=\"el-icon-search\"></el-button>\n        </el-input>\n        <TbExamSelectDialog\n                ref=\"tbExamSelect\"\n                @doSubmit=\"selectionsToInput\"\n                :selectData=\"selectData\"\n                :single=\"single\"  :where=\"where\"\n        />\n    </div>\n</template>\n<script>\n    import TbExamSelectDialog from './QuestionTbExamSelectDialog'\n    import tbExamApi from '@/api/Exam'\n    export default {\n        data () {\n            return {\n                name: '',\n                selectData: [],\n                tbExamService: null\n            }\n        },\n        props: {\n            size: {\n                type: String,\n                default: 'small'\n            },\n            myvals: {\n                type: Array,\n                default: () => {\n                    return [];\n                },\n            },\n            btnDisabled: {\n                type: Boolean,\n                default: false\n            },\n            inpDisabled: {\n                type: Boolean,\n                default: true\n            },\n            single: {  // 是否启用单选\n                type: Boolean,\n                default: false\n            },\n            where: {  // 查询条件\n                type: String,\n                default: ''\n            }\n        },\n        components: {\n            TbExamSelectDialog\n        },\n        created () {\n        },\n        watch: {\n            myvals: {\n                handler (newVal) {\n                    this.selectData = []\n                    if (newVal && newVal.length > 0) {\n                        tbExamApi.getByIds(newVal).then(\n                            response => {\n                                if (response && response.data) {\n                                    this.selectData = response.data\n                                }\n                            }\n                        )\n                    }\n                },\n                immediate: true,\n                deep: false\n            },\n            selectData: {\n                handler (newVal) {\n                    this.name = newVal.map(item => item.title).join(',')\n                },\n                immediate: false,\n                deep: false\n            }\n        },\n        methods: {\n            // 设置选中\n            selectionsToInput (selections) {\n                this.selectData = selections\n                let idList = []\n                for (var i = 0; i < this.selectData.length; i++) {\n                    var obj = this.selectData[i]\n                    //id值\n                    var id = obj.id\n                    //放到数组里面\n                    idList.push(id)\n                }\n                this.$emit('getInfo', idList)\n            },\n            // 显示列表\n            showUserSelect () {\n                this.$refs.tbExamSelect.init()\n            }\n        }\n    }\n</script>\n<style>\n    .el-form-item__content .el-input-group {\n        vertical-align: middle;\n    }\n    .el-tag + .el-tag {\n        margin-left: 5px;\n        margin-bottom: 5px;\n    }\n</style>\n"]}]}
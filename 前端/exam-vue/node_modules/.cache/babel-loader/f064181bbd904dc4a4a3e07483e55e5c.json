{"remainingRequest":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\babel-loader\\lib\\index.js!F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\project\\ksmg\\basemf-sig\\exam_vue\\src\\views\\pages\\business\\tbQuestionTbExamSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\src\\views\\pages\\business\\tbQuestionTbExamSelect.vue","mtime":1695228853072},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\babel.config.js","mtime":1698853375725},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\basemf-sig\\exam_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVGJFeGFtU2VsZWN0RGlhbG9nIGZyb20gJy4vdGJRdWVzdGlvblRiRXhhbVNlbGVjdERpYWxvZyc7CmltcG9ydCB0YkV4YW1BcGkgZnJvbSAnQC9hcGkvYnVzaW5lc3MvdGJFeGFtJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnJywKICAgICAgc2VsZWN0RGF0YTogW10sCiAgICAgIHRiRXhhbVNlcnZpY2U6IG51bGwKICAgIH07CiAgfSwKICBwcm9wczogewogICAgc2l6ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdzbWFsbCcKICAgIH0sCiAgICBteXZhbHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIGJ0bkRpc2FibGVkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgaW5wRGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIHNpbmdsZTogewogICAgICAvLyDmmK/lkKblkK/nlKjljZXpgIkKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICB3aGVyZTogewogICAgICAvLyDmn6Xor6LmnaHku7YKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgVGJFeGFtU2VsZWN0RGlhbG9nOiBUYkV4YW1TZWxlY3REaWFsb2cKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICB3YXRjaDogewogICAgbXl2YWxzOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsKSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgdGhpcy5zZWxlY3REYXRhID0gW107CgogICAgICAgIGlmIChuZXdWYWwgJiYgbmV3VmFsLmxlbmd0aCA+IDApIHsKICAgICAgICAgIHRiRXhhbUFwaS5nZXRCeUlkcyhuZXdWYWwpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5kYXRhKSB7CiAgICAgICAgICAgICAgX3RoaXMuc2VsZWN0RGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlLAogICAgICBkZWVwOiBmYWxzZQogICAgfSwKICAgIHNlbGVjdERhdGE6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihuZXdWYWwpIHsKICAgICAgICB0aGlzLm5hbWUgPSBuZXdWYWwubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbS50aXRsZTsKICAgICAgICB9KS5qb2luKCcsJyk7CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogZmFsc2UsCiAgICAgIGRlZXA6IGZhbHNlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDorr7nva7pgInkuK0KICAgIHNlbGVjdGlvbnNUb0lucHV0OiBmdW5jdGlvbiBzZWxlY3Rpb25zVG9JbnB1dChzZWxlY3Rpb25zKSB7CiAgICAgIHRoaXMuc2VsZWN0RGF0YSA9IHNlbGVjdGlvbnM7CiAgICAgIHZhciBpZExpc3QgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5zZWxlY3REYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIG9iaiA9IHRoaXMuc2VsZWN0RGF0YVtpXTsgLy9pZOWAvAoKICAgICAgICB2YXIgaWQgPSBvYmouaWQ7IC8v5pS+5Yiw5pWw57uE6YeM6Z2iCgogICAgICAgIGlkTGlzdC5wdXNoKGlkKTsKICAgICAgfQoKICAgICAgdGhpcy4kZW1pdCgnZ2V0SW5mbycsIGlkTGlzdCk7CiAgICB9LAogICAgLy8g5pi+56S65YiX6KGoCiAgICBzaG93VXNlclNlbGVjdDogZnVuY3Rpb24gc2hvd1VzZXJTZWxlY3QoKSB7CiAgICAgIHRoaXMuJHJlZnMudGJFeGFtU2VsZWN0LmluaXQoKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;AAcA;AACA;AACA;EACAA,IADA,kBACA;IACA;MACAC,QADA;MAEAC,cAFA;MAGAC;IAHA;EAKA,CAPA;EAQAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,WADA;MAEAC;QACA;MACA;IAJA,CALA;IAWAE;MACAH,aADA;MAEAC;IAFA,CAXA;IAeAG;MACAJ,aADA;MAEAC;IAFA,CAfA;IAmBAI;MAAA;MACAL,aADA;MAEAC;IAFA,CAnBA;IAuBAK;MAAA;MACAN,YADA;MAEAC;IAFA;EAvBA,CARA;EAoCAM;IACAC;EADA,CApCA;EAuCAC,OAvCA,qBAuCA,CACA,CAxCA;EAyCAC;IACAR;MACAS,OADA,mBACAC,MADA,EACA;QAAA;;QACA;;QACA;UACAC,gCACA;YACA;cACA;YACA;UACA,CALA;QAOA;MACA,CAZA;MAaAC,eAbA;MAcAC;IAdA,CADA;IAiBAnB;MACAe,OADA,mBACAC,MADA,EACA;QACA;UAAA;QAAA;MACA,CAHA;MAIAE,gBAJA;MAKAC;IALA;EAjBA,CAzCA;EAkEAC;IACA;IACAC,iBAFA,6BAEAC,UAFA,EAEA;MACA;MACA;;MACA;QACA,6BADA,CAEA;;QACA,gBAHA,CAIA;;QACAC;MACA;;MACA;IACA,CAbA;IAcA;IACAC,cAfA,4BAeA;MACA;IACA;EAjBA;AAlEA","names":["data","name","selectData","tbExamService","props","size","type","default","myvals","btnDisabled","inpDisabled","single","where","components","TbExamSelectDialog","created","watch","handler","newVal","tbExamApi","immediate","deep","methods","selectionsToInput","selections","idList","showUserSelect"],"sourceRoot":"src/views/pages/business","sources":["tbQuestionTbExamSelect.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-input placeholder=\"请选择\" :size=\"size\" :disabled=\"inpDisabled\" style=\"line-hight:40px\" v-model=\"name\" class=\"input-with-select\">\r\n            <el-button slot=\"append\" :disabled=\"btnDisabled\" @click=\"showUserSelect\" icon=\"el-icon-search\"></el-button>\r\n        </el-input>\r\n        <TbExamSelectDialog\r\n                ref=\"tbExamSelect\"\r\n                @doSubmit=\"selectionsToInput\"\r\n                :selectData=\"selectData\"\r\n                :single=\"single\"  :where=\"where\"\r\n        />\r\n    </div>\r\n</template>\r\n<script>\r\n    import TbExamSelectDialog from './tbQuestionTbExamSelectDialog'\r\n    import tbExamApi from '@/api/business/tbExam'\r\n    export default {\r\n        data () {\r\n            return {\r\n                name: '',\r\n                selectData: [],\r\n                tbExamService: null\r\n            }\r\n        },\r\n        props: {\r\n            size: {\r\n                type: String,\r\n                default: 'small'\r\n            },\r\n            myvals: {\r\n                type: Array,\r\n                default: () => {\r\n                    return [];\r\n                },\r\n            },\r\n            btnDisabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            inpDisabled: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            single: {  // 是否启用单选\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            where: {  // 查询条件\r\n                type: String,\r\n                default: ''\r\n            }\r\n        },\r\n        components: {\r\n            TbExamSelectDialog\r\n        },\r\n        created () {\r\n        },\r\n        watch: {\r\n            myvals: {\r\n                handler (newVal) {\r\n                    this.selectData = []\r\n                    if (newVal && newVal.length > 0) {\r\n                        tbExamApi.getByIds(newVal).then(\r\n                            response => {\r\n                                if (response && response.data) {\r\n                                    this.selectData = response.data\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                },\r\n                immediate: true,\r\n                deep: false\r\n            },\r\n            selectData: {\r\n                handler (newVal) {\r\n                    this.name = newVal.map(item => item.title).join(',')\r\n                },\r\n                immediate: false,\r\n                deep: false\r\n            }\r\n        },\r\n        methods: {\r\n            // 设置选中\r\n            selectionsToInput (selections) {\r\n                this.selectData = selections\r\n                let idList = []\r\n                for (var i = 0; i < this.selectData.length; i++) {\r\n                    var obj = this.selectData[i]\r\n                    //id值\r\n                    var id = obj.id\r\n                    //放到数组里面\r\n                    idList.push(id)\r\n                }\r\n                this.$emit('getInfo', idList)\r\n            },\r\n            // 显示列表\r\n            showUserSelect () {\r\n                this.$refs.tbExamSelect.init()\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n    .el-form-item__content .el-input-group {\r\n        vertical-align: middle;\r\n    }\r\n    .el-tag + .el-tag {\r\n        margin-left: 5px;\r\n        margin-bottom: 5px;\r\n    }\r\n</style>\r\n"]}]}

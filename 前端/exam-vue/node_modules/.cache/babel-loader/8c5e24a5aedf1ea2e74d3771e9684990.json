{"remainingRequest":"F:\\project\\base\\sourcecode\\front\\exam_vue\\node_modules\\babel-loader\\lib\\index.js!F:\\project\\base\\sourcecode\\front\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\project\\base\\sourcecode\\front\\exam_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\project\\base\\sourcecode\\front\\exam_vue\\src\\views\\pages\\business\\tbTreeTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\project\\base\\sourcecode\\front\\exam_vue\\src\\views\\pages\\business\\tbTreeTest.vue","mtime":1695051681207},{"path":"F:\\project\\base\\sourcecode\\front\\exam_vue\\babel.config.js","mtime":1637306514000},{"path":"F:\\project\\base\\sourcecode\\front\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\base\\sourcecode\\front\\exam_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\project\\base\\sourcecode\\front\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\base\\sourcecode\\front\\exam_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["components","SelectParentTree","data","listLoading","list","total","page","limit","searchObj","dialogVisible","tbTreeTest","saveBtnDisabled","selectValue","rules","name","required","message","trigger","parentId","sortValue","dataParentTree","created","console","mounted","methods","getRowKeys","row","saveParentId","treeId","confirmButtonText","callback","api","fetchPopParent","exportData","window","sizeChangeHandle","val","fetchData","resetData","removeDataById","id","cancelButtonText","type","then","catch","handleSelectionChange","selection","batchRemove","idList","add","edit","saveOrUpdate","save","update"],"sourceRoot":"src/views/pages/business","sources":["tbTreeTest.vue"],"sourcesContent":["<template>\r\n        <div class=\"app-container\">\r\n        <!-- 工具条 -->\r\n        <div class=\"tools-div\">\r\n            <el-button type=\"success\" icon=\"el-icon-plus\" size=\"mini\" @click=\"add()\" :disabled=\"$hasBP('bnt.tbTreeTest.add')  === false\">添 加</el-button>\r\n            <el-button style=\"margin-left:8px\" size=\"mini\" :disabled=\"$hasBP('bnt.tbTreeTest.list')  === false\" type=\"primary\" @click=\"exportData\">导出数据</el-button>\r\n        </div>\r\n        <!-- 列表 -->\r\n        <el-table\r\n                v-loading=\"listLoading\"\r\n                :data=\"list\"\r\n                style=\"width: 100%;margin-bottom: 20px;margin-top: 10px;\"\r\n                row-key=\"id\"\r\n                border\r\n                :default-expand-all=\"false\"\r\n                :tree-props=\"{children: 'children'}\">\r\n                        <el-table-column sortable prop=\"name\" label=\"名称\"/>\r\n                        <el-table-column sortable prop=\"description\" label=\"备注\"/>\r\n                        <el-table-column sortable prop=\"sortValue\" label=\"排序\"/>\r\n                        <el-table-column sortable prop=\"createTime\" label=\"创建时间\"/>\r\n                        <el-table-column sortable prop=\"updateTime\" label=\"更新时间\"/>\r\n                                <el-table-column type=\"expand\" label=\"...\">\r\n                                    <template slot-scope=\"props\">\r\n                                        <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n                                                    <el-form-item label=\"名称\">\r\n                                                        <span>{{ props.row.name }}</span>\r\n                                                    </el-form-item>\r\n                                                    <el-form-item label=\"备注\">\r\n                                                        <span>{{ props.row.description }}</span>\r\n                                                    </el-form-item>\r\n                                                    <el-form-item label=\"排序\">\r\n                                                        <span>{{ props.row.sortValue }}</span>\r\n                                                    </el-form-item>\r\n                                                    <el-form-item label=\"创建时间\">\r\n                                                        <span>{{ props.row.createTime }}</span>\r\n                                                    </el-form-item>\r\n                                                    <el-form-item label=\"更新时间\">\r\n                                                        <span>{{ props.row.updateTime }}</span>\r\n                                                    </el-form-item>\r\n                                        </el-form>\r\n                                    </template>\r\n                                </el-table-column>\r\n            <el-table-column label=\"操作\" align=\"center\" fixed=\"right\">\r\n                <template slot-scope=\"scope\">\r\n                        <el-button type=\"success\" v-if=\"scope.row.type !== 2\" icon=\"el-icon-plus\" size=\"mini\" @click=\"add(scope.row)\"\r\n                                   title=\"添加下级\"/>\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"edit(scope.row.id)\" :disabled=\"$hasBP('bnt.tbTreeTest.update')  === false\" title=\"修改\"/>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeDataById(scope.row.id)\"\r\n                               :disabled=\"$hasBP('bnt.tbTreeTest.remove')  === false\"     title=\"删除\"/>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-dialog title=\"添加/修改\" :visible.sync=\"dialogVisible\" width=\"40%\">\r\n            <el-form ref=\"dataForm\" :model=\"tbTreeTest\" :rules=\"rules\" label-width=\"100px\" size=\"small\"\r\n                     style=\"padding-right: 40px;\">\r\n                    <el-form-item label=\"上级\">\r\n                        <select-parent-tree @saveTreeId=\"saveParentId\" treeTitle=\"选择上级\" :dataTree=\"dataParentTree\"\r\n                                          :treeVal=\"tbTreeTest.parentName\" :treeId=\"tbTreeTest.parentId\"></select-parent-tree>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"名称\" prop=\"name\">\r\n                                <el-input v-model=\"tbTreeTest.name\" clearable/>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"备注\" prop=\"description\">\r\n                                <el-input v-model=\"tbTreeTest.description\" clearable/>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"排序\" prop=\"sortValue\">\r\n                                <el-input-number :min=\"0\" v-model=\"tbTreeTest.sortValue\" controls-position=\"right\"  clearable/>\r\n                    </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\" size=\"small\" icon=\"el-icon-refresh-right\">取 消</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-check\" @click=\"saveOrUpdate()\" size=\"small\">确 定</el-button>\r\n      </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import {getToken} from '@/utils/auth'\r\n    import api from '@/api/business/tbTreeTest'\r\n    const defaultForm = {\r\n    }\r\n    export default {\r\n        components: {\r\n            //导入树形选择组件\r\n            SelectParentTree: () => import('@/components/Custom/TreeSelect/TreeSelect'),\r\n        },\r\n        data() {\r\n            return {\r\n                listLoading: true, // 数据是否正在加载\r\n                list: [], // banner列表\r\n                total: 0, // 数据库中的总记录数\r\n                page: 1, // 默认页码\r\n                limit: 5, // 每页记录数\r\n                searchObj: {}, // 查询表单对象\r\n                dialogVisible: false,\r\n                tbTreeTest:defaultForm,\r\n                saveBtnDisabled:false,\r\n                selectValue:[] //复选框选择内容封装数组\r\n                , rules:{\r\n                \r\n                name:\r\n                [\r\n                    {required: true, message: '请输入名称', trigger: 'blur'}\r\n                ]\r\n                ,\r\n                parentId:\r\n                [\r\n                    {required: true, message: '请输入上级', trigger: 'blur'}\r\n                ]\r\n                ,\r\n                sortValue:\r\n                [\r\n                    {required: true, message: '请输入排序', trigger: 'blur'}\r\n                ]\r\n            }\r\n            ,dataParentTree:null\r\n        }\r\n        },\r\n        // 生命周期函数：内存准备完毕，页面尚未渲染\r\n        created() {\r\n            console.log('list created......')\r\n            this.fetchData()\r\n            this.fetchPopParent()\r\n        },\r\n        // 生命周期函数：内存准备完毕，页面渲染成功\r\n        mounted() {\r\n            console.log('list mounted......')\r\n        },\r\n        methods: {\r\n            getRowKeys(row) {\r\n                return row.id\r\n            },\r\n            //回调保存选择的部门id\r\n            saveParentId(treeId) {\r\n                if (treeId == this.tbTreeTest.id) {\r\n                    this.$alert('上级不能和当前相同', '提示', {\r\n                        confirmButtonText: '确定',\r\n                        callback: action => {\r\n                            this.tbTreeTest.parentId = '';\r\n                            this.tbTreeTest.parentName = '';\r\n                            api.getById(this.tbTreeTest.id).then(response => {\r\n                                this.tbTreeTest = response.data\r\n                                //this.tbTreeTest.parentName = row.name\r\n                            })\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.tbTreeTest.parentId = treeId\r\n                    this.tbTreeTest.parentName= treeName\r\n                }\r\n            },\r\n\r\n            fetchPopParent() {\r\n                //加载弹出选择部门数据\r\n                api.getAllTbTreeTest().then(response => {\r\n                    this.dataParentTree = response.data\r\n                })\r\n\r\n            },\r\n\r\n            //导出数据\r\n            exportData() {\r\n                window.open(process.env.VUE_APP_BASE_API + '/business/tbTreeTest/export?token=' + getToken());\r\n            },\r\n            // 每页数\r\n            sizeChangeHandle(val) {\r\n                this.limit = val;\r\n                this.page = 1;\r\n                this.fetchData(this.page);\r\n            },\r\n            // 加载banner列表数据\r\n            fetchData(page = 1) {\r\n                debugger\r\n                this.page = page\r\n                api.getAllTbTreeTest(this.searchObj).then(\r\n                    response => {\r\n                        //this.list = response.data.list\r\n                        this.list = response.data\r\n                        this.listLoading = false\r\n                    }\r\n                )\r\n            },\r\n            // 重置查询表单\r\n            resetData() {\r\n                console.log('重置查询表单')\r\n                this.searchObj = {}\r\n                this.fetchData()\r\n            },\r\n            // 根据id删除数据\r\n            removeDataById(id) {\r\n                // debugger\r\n                this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => { // promise\r\n                    // 点击确定，远程调用ajax\r\n                    return api.removeById(id)\r\n                }).then((response) => {\r\n                    this.fetchData(this.page)\r\n                    this.$message.success(response.message || '删除成功')\r\n                }).catch(() => {\r\n                    this.$message.info('取消删除')\r\n                })\r\n            },\r\n            //复选框发生变化执行方法\r\n            handleSelectionChange(selection) {\r\n                this.selectValue = selection\r\n                //console.log(this.selectValue)\r\n            },\r\n            //批量删除\r\n            batchRemove() {\r\n                //判断\r\n                if (this.selectValue.length == 0) {\r\n                    this.$message.warning('请选择要删除的记录！')\r\n                    return\r\n                }\r\n                this.$confirm('此操作将永久删除, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    //数组\r\n                    var idList = []\r\n                    //获取多个复选框对应id，封装到数组里面\r\n                    // [1,2,3]\r\n                    for (var i = 0; i < this.selectValue.length; i++) {\r\n                        var obj = this.selectValue[i]\r\n                        //id值\r\n                        var id = obj.id\r\n                        //放到数组里面\r\n                        idList.push(id)\r\n                    }\r\n                    api.batchRemove(idList).then(response => {\r\n                        //提示\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '删除成功!'\r\n                        });\r\n                        //刷新\r\n                        this.fetchData()\r\n                    })\r\n                })\r\n            },\r\n            //弹出添加表单\r\n            add(row) {\r\n                this.dialogVisible = true\r\n                this.tbTreeTest = {\r\n                }\r\n                this.dialogTitle = '添加下级'\r\n                if (row) {\r\n                    this.tbTreeTest.parentId = row.id\r\n                    this.tbTreeTest.parentName = row.name\r\n                } else {\r\n                    this.dialogTitle = '添加顶级'\r\n                    this.tbTreeTest.parentId = '0'\r\n                }\r\n                this.rules.name = [{required: true, message: '请输入名称', trigger: 'blur'}]\r\n                this.rules.parentId = [{required: true, message: '请输入上级', trigger: 'blur'}]\r\n                this.rules.sortValue = [{required: true, message: '请输入排序', trigger: 'blur'}]\r\n            },\r\n            //编辑\r\n            edit(id) {\r\n                this.dialogVisible = true\r\n                this.rules.name = [{required: true, message: '请输入名称', trigger: 'blur'}]\r\n                this.rules.parentId = [{required: true, message: '请输入上级', trigger: 'blur'}]\r\n                this.rules.sortValue = [{required: true, message: '请输入排序', trigger: 'blur'}]\r\n                api.getById(id).then(response => {\r\n                    this.$nextTick(function () {\r\n                        this.tbTreeTest = response.data\r\n                        if(this.$refs.eltreeDept){\r\n                            this.$refs.eltreeDept.setCheckedKeys(this.tbTreeTest.deptIdList);\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            //添加或更新\r\n            saveOrUpdate() {\r\n                this.$refs.dataForm.validate(valid => {\r\n                    if (valid) {\r\n                        if (!this.tbTreeTest.id) {\r\n                            this.save()\r\n                        } else {\r\n                            this.update()\r\n                        }\r\n                    }\r\n                })\r\n            },\r\n            //添加\r\n            save() {\r\n                api.save(this.tbTreeTest).then(response => {\r\n                    this.$message.success('操作成功')\r\n                    this.dialogVisible = false\r\n                    this.fetchData(this.page)\r\n                })\r\n            },\r\n            //更新\r\n            update() {\r\n                api.updateById(this.tbTreeTest).then(response => {\r\n                    this.$message.success(response.message || '操作成功')\r\n                    this.dialogVisible = false\r\n                    this.fetchData(this.page)\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n    .demo-table-expand {\r\n        font-size: 0;\r\n    }\r\n    .demo-table-expand label {\r\n        width: 90px;\r\n        color: #99a9bf;\r\n    }\r\n    .demo-table-expand .el-form-item {\r\n        margin-right: 0;\r\n        margin-bottom: 0;\r\n        width: 50%;\r\n    }\r\n</style>\r\n"]}]}

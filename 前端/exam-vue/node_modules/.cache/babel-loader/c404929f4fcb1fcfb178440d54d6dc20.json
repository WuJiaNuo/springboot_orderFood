{"remainingRequest":"F:\\project\\ksmg\\exam-vue\\node_modules\\babel-loader\\lib\\index.js!F:\\project\\ksmg\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\project\\ksmg\\exam-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\project\\ksmg\\exam-vue\\src\\views\\pages\\ExamResultAll.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\project\\ksmg\\exam-vue\\src\\views\\pages\\ExamResultAll.vue","mtime":1699603678077},{"path":"F:\\project\\ksmg\\exam-vue\\babel.config.js","mtime":1698853375725},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\project\\ksmg\\exam-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["components","TbMyExamLog","data","listLoading","list","total","page","limit","searchObj","dialogVisible","tbExamResult","saveBtnDisabled","selectValue","rules","examId","required","message","trigger","userId","score","created","console","mounted","methods","getRowKeys","row","exportData","window","sizeChangeHandle","val","fetchData","api","resetData","removeDataById","id","confirmButtonText","cancelButtonText","type","then","catch","handleSelectionChange","selection","batchRemove","idList","add","edit","saveOrUpdate","save","update"],"sourceRoot":"src/views/pages","sources":["ExamResultAll.vue"],"sourcesContent":["<template>\n        <div class=\"app-container\">\n        <div class=\"search-div\">\n            <el-form label-width=\"70px\" size=\"small\">\n                <el-row>\n                            <el-col :span=\"8\">\n                                <el-form-item label=\"考试名称\">\n                                        <el-input v-model=\"searchObj.examTitle\" placeholder=\"考试名称\" clearable/>\n                                </el-form-item>\n                            </el-col>\n                </el-row>\n\n                <el-row style=\"display:flex\">\n                    <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"fetchData()\">搜索</el-button>\n                    <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetData\">重置</el-button>\n                </el-row>\n            </el-form>\n        </div>\n        <!-- 列表 -->\n            <el-table\n                    v-loading=\"listLoading\"\n                    :data=\"list\"\n                    :row-key=\"getRowKeys\"\n                    stripe\n                    border\n                    style=\"width: 100%;margin-top: 10px;\"\n                    @selection-change=\"handleSelectionChange\">\n            <el-table-column\n                    label=\"序号\"\n                    width=\"70\"\n                    align=\"center\">\n                <template slot-scope=\"scope\">\n                    {{ (page - 1) * limit + scope.$index + 1 }}\n                </template>\n            </el-table-column>\n            <el-table-column type=\"selection\"  :reserve-selection=\"true\"/>\n              <el-table-column sortable prop=\"id\" label=\"id\"/>\n                        <el-table-column sortable prop=\"examTitle\" label=\"考试名称\"/>\n                        <el-table-column sortable prop=\"userName\" label=\"用户名称\"/>\n                        <el-table-column sortable prop=\"score\" label=\"得分\"/>\n                        <el-table-column sortable prop=\"createTime\" label=\"创建时间\"/>\n                        <el-table-column sortable label=\"答题记录\" show-overflow-tooltip=\"true\">\n                          <template slot-scope=\"scope\">\n                            <TbMyExamLog :resultId=\"scope.row.id\"></TbMyExamLog>\n                          </template>\n                        </el-table-column>\n                                <el-table-column type=\"expand\" label=\"...\">\n                                    <template slot-scope=\"props\">\n                                        <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                                                    <el-form-item label=\"考试名称\">\n                                                        <span>{{ props.row.examTitle }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"用户名称\">\n                                                        <span>{{ props.row.userName }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"得分\">\n                                                        <span>{{ props.row.score }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"答题记录\">\n                                                      <span> <TbMyExamLog :resultId=\"props.row.id\"></TbMyExamLog></span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"创建时间\">\n                                                        <span>{{ props.row.createTime }}</span>\n                                                    </el-form-item>\n                                                    <el-form-item label=\"修改时间\">\n                                                        <span>{{ props.row.updateTime }}</span>\n                                                    </el-form-item>\n                                        </el-form>\n                                    </template>\n                                </el-table-column>\n        </el-table>\n        <!-- 分页组件 -->\n        <el-pagination\n                @size-change=\"sizeChangeHandle\"\n                :current-page=\"page\"\n                :total=\"total\"\n                :page-size=\"limit\"\n                style=\"padding: 30px 0; text-align: center;\"\n                :page-sizes=\"[5, 10, 50, 100]\"\n                layout=\"total,sizes, prev, pager, next, jumper\"\n                @current-change=\"fetchData\"\n        />\n        <el-dialog title=\"添加/修改\" :visible.sync=\"dialogVisible\" width=\"40%\">\n            <el-form ref=\"dataForm\" :model=\"tbExamResult\" :rules=\"rules\" label-width=\"100px\" size=\"small\"\n                     style=\"padding-right: 40px;\">\n                    <el-form-item label=\"考试id\" prop=\"examId\">\n                                <el-input v-model=\"tbExamResult.examId\" clearable/>\n                    </el-form-item>\n                    <el-form-item label=\"用户id\" prop=\"userId\">\n                                <el-input v-model=\"tbExamResult.userId\" clearable/>\n                    </el-form-item>\n                    <el-form-item label=\"得分\" prop=\"score\">\n                                <el-input-number :min=\"0\" v-model=\"tbExamResult.score\" controls-position=\"right\"  clearable/>\n                    </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\" size=\"small\" icon=\"el-icon-refresh-right\">取 消</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-check\" @click=\"saveOrUpdate()\" size=\"small\">确 定</el-button>\n      </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\n    import {getToken} from '@/utils/auth'\n    import api from '@/api/ExamResult'\n    import TbMyExamLog from \"@/views/pages/ExamLogView.vue\";\n    const defaultForm = {\n    }\n    export default {\n        components: {\n          TbMyExamLog\n        },\n        data() {\n            return {\n                listLoading: true, // 数据是否正在加载\n                list: [], // banner列表\n                total: 0, // 数据库中的总记录数\n                page: 1, // 默认页码\n                limit: 5, // 每页记录数\n                searchObj: {}, // 查询表单对象\n                dialogVisible: false,\n                tbExamResult:defaultForm,\n                saveBtnDisabled:false,\n                selectValue:[] //复选框选择内容封装数组\n                , rules:{\n\n                examId:\n                [\n                    {required: true, message: '请输入考试id', trigger: 'blur'}\n                ]\n                ,\n                userId:\n                [\n                    {required: true, message: '请输入用户id', trigger: 'blur'}\n                ]\n                ,\n                score:\n                [\n                    {required: true, message: '请输入得分', trigger: 'blur'}\n                ]\n            }\n        }\n        },\n        // 生命周期函数：内存准备完毕，页面尚未渲染\n        created() {\n            console.log('list created......')\n            this.fetchData()\n        },\n        // 生命周期函数：内存准备完毕，页面渲染成功\n        mounted() {\n            console.log('list mounted......')\n        },\n        methods: {\n            getRowKeys(row) {\n                return row.id\n            },\n            //导出数据\n            exportData() {\n                window.open(process.env.VUE_APP_BASE_API + '/business/tbExamResult/export?token=' + getToken());\n            },\n            // 每页数\n            sizeChangeHandle(val) {\n                this.limit = val;\n                this.page = 1;\n                this.fetchData(this.page);\n            },\n            // 加载banner列表数据\n            fetchData(page = 1) {\n                debugger\n                this.page = page\n                api.getPageListAll(this.page, this.limit, this.searchObj).then(\n                    response => {\n                        //this.list = response.data.list\n                        this.list = response.data.records\n                        this.total = response.data.total\n                        // 数据加载并绑定成功\n                        this.listLoading = false\n                    }\n                )\n            },\n            // 重置查询表单\n            resetData() {\n                console.log('重置查询表单')\n                this.searchObj = {}\n                this.fetchData()\n            },\n            // 根据id删除数据\n            removeDataById(id) {\n                // debugger\n                this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => { // promise\n                    // 点击确定，远程调用ajax\n                    return api.removeById(id)\n                }).then((response) => {\n                    this.fetchData(this.page)\n                    this.$message.success(response.message || '删除成功')\n                }).catch(() => {\n                    this.$message.info('取消删除')\n                })\n            },\n            //复选框发生变化执行方法\n            handleSelectionChange(selection) {\n                this.selectValue = selection\n                //console.log(this.selectValue)\n            },\n            //批量删除\n            batchRemove() {\n                //判断\n                if (this.selectValue.length == 0) {\n                    this.$message.warning('请选择要删除的记录！')\n                    return\n                }\n                this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    //数组\n                    var idList = []\n                    //获取多个复选框对应id，封装到数组里面\n                    // [1,2,3]\n                    for (var i = 0; i < this.selectValue.length; i++) {\n                        var obj = this.selectValue[i]\n                        //id值\n                        var id = obj.id\n                        //放到数组里面\n                        idList.push(id)\n                    }\n                    api.batchRemove(idList).then(response => {\n                        //提示\n                        this.$message({\n                            type: 'success',\n                            message: '删除成功!'\n                        });\n                        //刷新\n                        this.fetchData()\n                    })\n                })\n            },\n            //弹出添加表单\n            add(row) {\n                this.dialogVisible = true\n                this.tbExamResult = {\n                }\n                this.rules.examId = [{required: true, message: '请输入考试id', trigger: 'blur'}]\n                this.rules.userId = [{required: true, message: '请输入用户id', trigger: 'blur'}]\n                this.rules.score = [{required: true, message: '请输入得分', trigger: 'blur'}]\n            },\n            //编辑\n            edit(id) {\n                this.dialogVisible = true\n                this.rules.examId = [{required: true, message: '请输入考试id', trigger: 'blur'}]\n                this.rules.userId = [{required: true, message: '请输入用户id', trigger: 'blur'}]\n                this.rules.score = [{required: true, message: '请输入得分', trigger: 'blur'}]\n                api.getById(id).then(response => {\n                    this.$nextTick(function () {\n                        this.tbExamResult = response.data\n                        if(this.$refs.eltreeDept){\n                            this.$refs.eltreeDept.setCheckedKeys(this.tbExamResult.deptIdList);\n                        }\n                    })\n                })\n            },\n            //添加或更新\n            saveOrUpdate() {\n                this.$refs.dataForm.validate(valid => {\n                    if (valid) {\n                        if (!this.tbExamResult.id) {\n                            this.save()\n                        } else {\n                            this.update()\n                        }\n                    }\n                })\n            },\n            //添加\n            save() {\n                api.save(this.tbExamResult).then(response => {\n                    this.$message.success('操作成功')\n                    this.dialogVisible = false\n                    this.fetchData(this.page)\n                })\n            },\n            //更新\n            update() {\n                api.updateById(this.tbExamResult).then(response => {\n                    this.$message.success(response.message || '操作成功')\n                    this.dialogVisible = false\n                    this.fetchData(this.page)\n                })\n            }\n        }\n    }\n</script>\n<style>\n    .demo-table-expand {\n        font-size: 0;\n    }\n    .demo-table-expand label {\n        width: 90px;\n        color: #99a9bf;\n    }\n    .demo-table-expand .el-form-item {\n        margin-right: 0;\n        margin-bottom: 0;\n        width: 50%;\n    }\n</style>\n"]}]}
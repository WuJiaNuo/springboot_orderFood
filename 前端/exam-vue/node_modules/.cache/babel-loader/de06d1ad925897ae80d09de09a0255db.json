{"remainingRequest":"F:\\exam_vue\\node_modules\\babel-loader\\lib\\index.js!F:\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\exam_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\exam_vue\\src\\views\\system\\sysUser\\treelist.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\exam_vue\\src\\views\\system\\sysUser\\treelist.vue","mtime":1683136294380},{"path":"F:\\exam_vue\\babel.config.js","mtime":1637306514000},{"path":"F:\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\exam_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\exam_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\exam_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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,uBAuIA;MAAA;;MAAA;MACA;;MACA;QACA;QACA;MACA;;MACApB,uDACAF,IADA,CACA;QACA;QACA;MAEA,CALA;IAMA,CAnJA;IAqJA;IACAuB,cAtJA,0BAsJA9B,GAtJA,EAsJA;MAAA;;MACA;MACA;MACA+B;QACA;QACAX;QACA;QACAA;QACA;QACA;MACA,CAPA;IAQA,CAjKA;;IAmKA;AACA;AACA;IACAY,oBAtKA,gCAsKAnC,KAtKA,EAsKA;MAAA;MACA;MACA;QAAA;MAAA,QAFA,CAGA;;MACA;IACA,CA3KA;;IA6KA;AACA;AACA;IACAoC,mBAhLA,+BAgLApC,KAhLA,EAgLA;MACA;MAAA;MACA;MACA;IACA,CApLA;IAsLA;IACAqC,UAvLA,wBAuLA;MAAA;;MACA;QACAC,uBADA;QAEAC;MAFA;MAIAL;QACA;;QACA;;QACA;MACA,CAJA;IAKA,CAjMA;IAkMA;IACAM,YAnMA,wBAmMArC,GAnMA,EAmMA;MAAA;;MACA;MACAA;MACAS,qCACAF,IADA,CACA;QACA;;QACA;MACA,CAJA;IAKA,CA3MA;IA4MA;IACA+B,cA7MA,0BA6MAC,EA7MA,EA6MA;MAAA;;MACA;QACAnC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAIAC,IAJA,CAIA;QACA;QACAE,mBACAF,IADA,CACA;UACA;UACA;YACAD,eADA;YAEAnB;UAFA,GAFA,CAMA;;;UACA;QACA,CATA;MAUA,CAhBA;IAiBA,CA/NA;IAgOA;IACAqD,IAjOA,gBAiOAD,EAjOA,EAiOA;MAAA;;MACA;MACA,0BAFA,CAGA;;MACA9B,kBACAF,IADA,CACA;QACA;UACA;UACA;QACA,CAHA;MAIA,CANA;IAOA,CA5OA;IA6OA;IACAkC,YA9OA,0BA8OA;MAAA;;MAEA;MACA;MACA;QACA;UACA;;UACA;YACA;UACA,CAFA,MAEA;YACA;UACA;QAEA,CARA,MAQA;UACArB;UACA;QACA;MACA,CAbA;IAcA,CAhQA;IAiQA;IACAsB,MAlQA,oBAkQA;MAAA;;MACAjC,yBACAF,IADA,CACA;QACA;QACA,iCAFA,CAGA;;;QACA,8BAJA,CAKA;;QACA;MACA,CARA;IASA,CA5QA;IA6QA;IACAoC,IA9QA,kBA8QA;MAAA;;MACAlC,uBACAF,IADA,CACA;QACA;QACA,iCAFA,CAGA;;;QACA,8BAJA,CAKA;;QACA;MACA,CARA;IASA,CAxRA;IAyRA;IACAqC,GA1RA,iBA0RA;MACA;MACA;MACA;QACA;MACA,CAFA;IAGA,CAhSA;IAiSA;IACAC,SAlSA,uBAkSA;MACAzB;MACA;MACA;MACA;IACA;EAvSA;AAnFA","names":["components","data","callback","listLoading","list","total","page","limit","searchObj","createTimes","dialogVisible","sysUser","dialogRoleVisible","allRoles","userRoleIds","isIndeterminate","checkAll","dataDeptTree","searchDeptValue","defaultDeptExpandedKeys","selectedDeptValue","selectedDeptName","sysPostX0d96aa0bList","selectValue","fileList","dowTempPath","rules","username","required","message","trigger","min","name","phone","password","deptIds","validator","created","watch","value","methods","getRowKeys","row","handleSelectionChange","selection","batchRemove","confirmButtonText","cancelButtonText","type","then","idList","api","exportData","window","getAllSysPostX0d96aa0b","sysPostApi","fetchPopDept","deptApi","handleDeptTreeSelectChange","filterDeptNode","handleRemove","file","console","handlePreview","handleExceed","files","beforeRemove","uploadFile","param","formData","catch","fetchData","showAssignRole","roleApi","handleCheckAllChange","handleCheckedChange","assignRole","userId","roleIdList","switchStatus","removeDataById","id","edit","saveOrUpdate","update","save","add","resetData"],"sourceRoot":"src/views/system/sysUser","sources":["treelist.vue"],"sourcesContent":["<template>\n  <el-container style=\"height: 100%; border: 1px solid #eee\">\n    <el-aside width=\"200px\" style=\"background-color: rgb(238, 241, 246)\">\n      <el-input v-model=\"searchDeptValue\" placeholder=\"请输入关键字过滤\" style=\"margin-bottom:10px;\"/>\n      <el-tag>当前选择：{{ selectedDeptName }}</el-tag>\n      <el-tree\n        ref=\"eltree\"\n        :data=\"dataDeptTree\"\n        node-key=\"id\"\n        :default-expand-all=\"true\"\n        :expand-on-click-node=\"false\"\n        :default-expanded-keys=\"defaultDeptExpandedKeys\"\n        :filter-node-method=\"filterDeptNode\"\n        @current-change=\"handleDeptTreeSelectChange\"\n      />\n    </el-aside>\n    <el-container>\n      <el-main>\n        <div class=\"app-container\">\n          <div class=\"search-div\">\n            <el-form label-width=\"70px\" size=\"small\">\n              <el-row>\n                <el-col :span=\"8\">\n                  <el-form-item label=\"关 键 字\">\n                    <el-input style=\"width: 95%\" v-model=\"searchObj.keyword\" placeholder=\"用户名/姓名/手机号码\"></el-input>\n                  </el-form-item>\n                </el-col>\n                <el-col :span=\"8\">\n                  <el-form-item label=\"操作时间\">\n                    <el-date-picker\n                      v-model=\"createTimes\"\n                      type=\"datetimerange\"\n                      range-separator=\"至\"\n                      start-placeholder=\"开始时间\"\n                      end-placeholder=\"结束时间\"\n                      value-format=\"yyyy-MM-dd HH:mm:ss\"\n                      style=\"margin-right: 10px;width: 100%;\"\n                    />\n                  </el-form-item>\n                </el-col>\n              </el-row>\n              <el-row style=\"display:flex\">\n                <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"fetchData()\">搜索</el-button>\n                <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetData\">重置</el-button>\n              </el-row>\n            </el-form>\n          </div>\n\n\n          <!-- 工具条 -->\n          <div class=\"tools-div\">\n            <el-button type=\"success\" :disabled=\"$hasBP('bnt.sysUser.add')  === false\" icon=\"el-icon-plus\" size=\"mini\"\n                         @click=\"add\">添 加\n            </el-button>\n            <el-button class=\"btn-add\" size=\"mini\" @click=\"batchRemove()\" :disabled=\"$hasBP('bnt.sysUser.remove')  === false\">批量删除</el-button>\n            <!--上传文件-->\n            <el-upload\n              class=\"upload-demo\"\n              action=\"#\"\n              :on-preview=\"handlePreview\"\n              :on-remove=\"handleRemove\"\n              :before-remove=\"beforeRemove\"\n              multiple\n              :limit=\"1\"\n              :on-exceed=\"handleExceed\"\n              :file-list=\"fileList\"\n              :show-file-list=\"false\"\n              :http-request=\"uploadFile\"\n            >\n\n              <el-button size=\"mini\" :disabled=\"$hasBP('bnt.sysUser.add')  === false\" type=\"primary\">导入数据</el-button>\n\n              <span style=\"margin-left:4px\" slot=\"tip\" class=\"el-upload__tip\"><a :href=\"dowTempPath\" target=\"_blank\">下载模板</a></span>\n            </el-upload>\n            <el-button style=\"margin-left:8px\" size=\"mini\" :disabled=\"$hasBP('bnt.sysUser.list')  === false\" type=\"primary\" @click=\"exportData\">导出数据</el-button>\n          </div>\n\n\n          <!-- 列表 -->\n          <el-table\n            v-loading=\"listLoading\"\n            :data=\"list\"\n            stripe\n            border\n            :row-key=\"getRowKeys\"\n            style=\"width: 100%;margin-top: 10px;\"  @selection-change=\"handleSelectionChange\">\n\n            <el-table-column\n              label=\"序号\"\n              width=\"70\"\n              align=\"center\">\n              <template slot-scope=\"scope\">\n                {{ (page - 1) * limit + scope.$index + 1 }}\n              </template>\n            </el-table-column>\n            <el-table-column type=\"selection\"  :reserve-selection=\"true\"/>\n\n            <el-table-column prop=\"username\" label=\"用户名\" width=\"100px\"/>\n            <el-table-column prop=\"name\" label=\"姓名\" width=\"100px\"/>\n            <el-table-column prop=\"phone\" label=\"手机\"/>\n            <el-table-column prop=\"deptName\" label=\"所属部门\" width=\"100px\"/>\n            <el-table-column label=\"状态\" width=\"80px\">\n              <template slot-scope=\"scope\">\n                <el-switch\n                  v-model=\"scope.row.status===1\"\n                  @change=\"switchStatus(scope.row)\">\n                </el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160px\"/>\n\n            <el-table-column label=\"操作\" align=\"center\" fixed=\"right\">\n              <template slot-scope=\"scope\">\n                <el-button type=\"primary\" :disabled=\"$hasBP('bnt.sysUser.update')  === false\" icon=\"el-icon-edit\" size=\"mini\" @click=\"edit(scope.row.id)\" title=\"修改\"/>\n                <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeDataById(scope.row.id)\"\n                           :disabled=\"$hasBP('bnt.sysUser.remove')  === false\"   title=\"删除\"/>\n                <el-button type=\"warning\" icon=\"el-icon-baseball\" size=\"mini\" @click=\"showAssignRole(scope.row)\"\n                           :disabled=\"$hasBP('bnt.sysUser.update')  === false\"  title=\"分配角色\"/>\n              </template>\n            </el-table-column>\n          </el-table>\n\n          <!-- 分页组件 -->\n          <el-pagination\n            :current-page=\"page\"\n            :total=\"total\"\n            :page-size=\"limit\"\n            style=\"padding: 30px 0; text-align: center;\"\n            layout=\"total, prev, pager, next, jumper\"\n            @current-change=\"fetchData\"\n          />\n\n          <el-dialog title=\"分配角色\" :visible.sync=\"dialogRoleVisible\">\n            <el-form label-width=\"80px\">\n              <el-form-item label=\"用户名\">\n                <el-input disabled :value=\"sysUser.username\"></el-input>\n              </el-form-item>\n\n\n              <el-form-item label=\"角色列表\">\n                <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">全选\n                </el-checkbox>\n                <div style=\"margin: 15px 0;\"></div>\n                <el-checkbox-group v-model=\"userRoleIds\" @change=\"handleCheckedChange\">\n                  <el-checkbox v-for=\"role in allRoles\" :key=\"role.id\" :label=\"role.id\">{{role.roleName}}</el-checkbox>\n                </el-checkbox-group>\n              </el-form-item>\n            </el-form>\n            <div slot=\"footer\">\n              <el-button type=\"primary\" @click=\"assignRole\" size=\"small\">保存</el-button>\n              <el-button @click=\"dialogRoleVisible = false\" size=\"small\">取消</el-button>\n            </div>\n          </el-dialog>\n\n          <el-dialog title=\"添加/修改\" :visible.sync=\"dialogVisible\" width=\"40%\">\n            <el-form ref=\"dataForm\" :model=\"sysUser\" :rules=\"rules\" label-width=\"100px\" size=\"small\"\n                     style=\"padding-right: 40px;\">\n              <el-form-item label=\"用户名\" prop=\"username\">\n                <el-input v-model=\"sysUser.username\"/>\n              </el-form-item>\n              <el-form-item v-if=\"!sysUser.id\" label=\"密码\" prop=\"password\">\n                <el-input v-model=\"sysUser.password\" type=\"password\"/>\n              </el-form-item>\n              <el-form-item label=\"姓名\" prop=\"name\">\n                <el-input v-model=\"sysUser.name\"/>\n              </el-form-item>\n              <el-form-item label=\"手机\" prop=\"phone\">\n                <el-input v-model=\"sysUser.phone\"/>\n              </el-form-item>\n\n              <el-form-item label=\"所属部门\" prop=\"deptIds\">\n                <el-tree\n                  ref=\"eltreeDept\"\n                  :data=\"dataDeptTree\"\n                  node-key=\"id\"\n                  show-checkbox\n                  :expand-on-click-node=\"false\"\n                  :default-checked-keys=\"sysUser.deptIds\"\n                />\n              </el-form-item>\n              <el-form-item label=\"所属岗位\" prop=\"postId\">\n                <el-select\n                  v-model=\"sysUser.postId\"\n                  placeholder=\"所属岗位\">\n                  <el-option\n                    v-for=\"sysPost in sysPostX0d96aa0bList\"\n                    :key=\"sysPost.id\"\n                    :label=\"sysPost.name\"\n                    :value=\"sysPost.id\"/>\n                </el-select>\n              </el-form-item>\n\n\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\" size=\"small\" icon=\"el-icon-refresh-right\">取 消</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-check\" @click=\"saveOrUpdate()\" size=\"small\">确 定</el-button>\n      </span>\n          </el-dialog>\n\n        </div>\n      </el-main>\n    </el-container>\n    </el-container>\n</template>\n<style>\n  .el-header {\n    background-color: #B3C0D1;\n    color: #333;\n    line-height: 60px;\n  }\n\n  .el-aside {\n    color: #333;\n  }\n\n  .upload-demo {\n    display: inline-block;\n    margin-left: 8px;\n  }\n</style>\n\n<script>\n    import api from '@/api/system/sysUser'\n    import roleApi from '@/api/system/sysRole'\n    import deptApi from '@/api/system/sysDept'\n    import {getToken} from '@/utils/auth'\n    import sysPostApi from '@/api/system/sysPost'\n\n    export default {\n        components: {\n            //导入树形选择组件\n            // SelectDeptTree: () => import('@/components/Custom/TreeSelect/TreeSelect')\n        },\n        data() {\n            let validOrgan = (rule, value, callback) => {\n                // 获取选中节点数组\n                let arr = this.$refs.eltreeDept.getCheckedKeys();\n                if(!arr || arr.length === 0) {\n                    callback(new Error('请选择关联机构'))\n                } else {\n                    callback();\n                }\n            }\n            return {\n                listLoading: false, // 数据是否正在加载\n                list: null, // 列表\n                total: 0, // 数据库中的总记录数\n                page: 1, // 默认页码\n                limit: 5, // 每页记录数\n                searchObj: {}, // 查询表单对象\n\n                createTimes: [],\n\n                dialogVisible: false,\n                sysUser: {},\n\n                dialogRoleVisible: false,\n                allRoles: [], // 所有角色列表\n                userRoleIds: [], // 用户的角色ID的列表\n                isIndeterminate: false, // 是否是不确定的\n                checkAll: false, // 是否全选\n                //////\n                dataDeptTree: [], //树形选择数据\n\n                //左侧树begin\n                searchDeptValue: '', //左侧部门搜索绑定\n                defaultDeptExpandedKeys: [],\n                selectedDeptValue: '',\n                selectedDeptName: '',\n                //左侧树end\n                 sysPostX0d96aa0bList:[],\n                selectValue:[], //复选框选择内容封装数组\n\n                fileList: [],\n                dowTempPath: process.env.VUE_APP_BASE_API + '/temp/temp.xlsx',\n\n                rules: {\n                    username: [\n                        {required: true, message: '请输入用户名', trigger: 'blur'},\n                        {min: 2, message: '长度在 2个字符以上', trigger: 'blur'}\n                    ],\n                    name: [\n                        {required: true, message: '请输入姓名', trigger: 'blur'}\n                    ],\n                    phone: [\n                        {required: true, message: '请输入手机', trigger: 'blur'}\n                    ],\n                    password: [\n                        {required: true, message: '请输入密码', trigger: 'blur'}\n                    ],\n                    deptIds: [\n                        {required: true,validator:validOrgan, trigger: 'change' }\n                    ]\n\n                }\n\n\n            }\n        },\n        created() {\n            //调用列表方法\n            this.fetchData()\n            this.fetchPopDept()\n            this.getAllSysPostX0d96aa0b()\n        },\n        watch: {\n            //监听左侧树查询事件\n            searchDeptValue(value) {\n                this.$refs.eltree.filter(value)\n            }\n        },\n        methods: {\n            //回调保存选择的部门id\n            // saveDeptId(treeId) {\n            //     this.sysUser.deptId = treeId\n            //     this.sysUser.deptName= treeName\n            //     this.$refs[\"dataForm\"].clearValidate(\"deptId\")\n            //     this.rules.deptId=[]\n            // },\n\n            getRowKeys(row) {\n                return row.id\n            },\n\n            //复选框发生变化执行方法\n            handleSelectionChange(selection) {\n                this.selectValue = selection\n                //console.log(this.selectValue)\n            },\n\n            //批量删除\n            batchRemove() {\n                //判断\n                if (this.selectValue.length == 0) {\n                    this.$message.warning('请选择要删除的记录！')\n                    return\n                }\n                this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    //数组\n                    var idList = []\n                    //获取多个复选框对应id，封装到数组里面\n                    // [1,2,3]\n                    for (var i = 0; i < this.selectValue.length; i++) {\n                        var obj = this.selectValue[i]\n                        //id值\n                        var id = obj.id\n                        //放到数组里面\n                        idList.push(id)\n                    }\n                    api.batchRemove(idList).then(response => {\n                        //提示\n                        this.$message({\n                            type: 'success',\n                            message: '删除成功!'\n                        });\n                        //刷新\n                        this.fetchData()\n                    })\n                })\n            },\n\n            //导出数据\n            exportData() {\n                window.open(process.env.VUE_APP_BASE_API + '/admin/system/sysUser/export?token=' + getToken());\n            },\n\n            getAllSysPostX0d96aa0b() {\n                let queryObj = {}\n                sysPostApi.getAllSysPost(queryObj)\n                    .then(response => {\n                        this.sysPostX0d96aa0bList = response.data\n                    })\n            },\n\n            fetchPopDept() {\n                //加载选择部门数据\n                deptApi.findSelectNodes().then(response => {\n                    this.dataDeptTree = response.data\n                })\n\n            },\n\n\n            //左侧树形方法begin\n            // 树节点选中改变\n            handleDeptTreeSelectChange(data) {\n                this.selectedDeptValue = data.id\n                this.selectedDeptName = data.label\n                //重新加载主数据\n                this.searchObj.deptId = data.id\n                this.fetchData(this.page)\n            },\n            filterDeptNode(value, data) {\n                if (!value) return true\n                return data.label.indexOf(value) !== -1\n            },\n            //左侧树形方法end\n\n            //上传文件begin\n            handleRemove(file, fileList) {\n                console.log(file, fileList);\n            },\n            handlePreview(file) {\n                console.log(file);\n            },\n            handleExceed(files, fileList) {\n                this.$message.warning(`一次只能选择一个文件`);\n            },\n            beforeRemove(file, fileList) {\n                return this.$confirm(`确定移除 ${file.name}？`);\n            },\n\n            //参数必须是param，才能获取到内容\n            uploadFile(param) {\n                // 获取上传的文件名\n                var file = param.file\n                //发送请求的参数格式为FormData\n                const formData = new FormData();\n                formData.append(\"file\", file)\n                api.uploadFile(formData)\n                    .then((res) => {\n                        if (res.code == 200) {\n                            //提示\n                            this.$message({\n                                type: 'success',\n                                message: '导入成功!'\n                            });\n                            this.fetchData(this.page);\n                            this.fileList = []\n                        }\n                        //this.refs.upload.clearFiles();\n                    })\n                    .catch((err) => {\n                        this.fileList = []\n                    });\n            },\n\n\n            //上传文件end\n\n\n            //列表\n            fetchData(page = 1) {\n                this.page = page\n                if (this.createTimes && this.createTimes.length == 2) {\n                    this.searchObj.createTimeBegin = this.createTimes[0]\n                    this.searchObj.createTimeEnd = this.createTimes[1]\n                }\n                api.getPageList(this.page, this.limit, this.searchObj)\n                    .then(response => {\n                        this.list = response.data.records\n                        this.total = response.data.total\n\n                    })\n            },\n\n            //展示分配角色\n            showAssignRole(row) {\n                this.sysUser = row\n                this.dialogRoleVisible = true\n                roleApi.getRolesByUserId(row.id).then(response => {\n                    this.allRoles = response.data.allRoles\n                    console.log(this.allRoles)\n                    this.userRoleIds = response.data.userRoleIds\n                    console.log(this.userRoleIds)\n                    this.checkAll = this.userRoleIds.length === this.allRoles.length\n                    this.isIndeterminate = this.userRoleIds.length > 0 && this.userRoleIds.length < this.allRoles.length\n                })\n            },\n\n            /*\n            全选勾选状态发生改变的监听\n            */\n            handleCheckAllChange(value) {// value 当前勾选状态true/false\n                // 如果当前全选, userRoleIds就是所有角色id的数组, 否则是空数组\n                this.userRoleIds = value ? this.allRoles.map(item => item.id) : []\n                // 如果当前不是全选也不全不选时, 指定为false\n                this.isIndeterminate = false\n            },\n\n            /*\n            角色列表选中项发生改变的监听\n            */\n            handleCheckedChange(value) {\n                const {userRoleIds, allRoles} = this\n                this.checkAll = userRoleIds.length === allRoles.length && allRoles.length > 0\n                this.isIndeterminate = userRoleIds.length > 0 && userRoleIds.length < allRoles.length\n            },\n\n            //分配角色\n            assignRole() {\n                let assginRoleVo = {\n                    userId: this.sysUser.id,\n                    roleIdList: this.userRoleIds\n                }\n                roleApi.assignRoles(assginRoleVo).then(response => {\n                    this.$message.success(response.message || '分配角色成功')\n                    this.dialogRoleVisible = false\n                    this.fetchData(this.page)\n                })\n            },\n            //更改用户状态\n            switchStatus(row) {\n                //判断，如果当前用户可用，修改禁用\n                row.status = row.status === 1 ? 0 : 1\n                api.updateStatus(row.id, row.status)\n                    .then(response => {\n                        this.$message.success(response.message || '操作成功')\n                        this.fetchData()\n                    })\n            },\n            //删除\n            removeDataById(id) {\n                this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    //调用方法删除\n                    api.removeById(id)\n                        .then(response => {\n                            //提示\n                            this.$message({\n                                type: 'success',\n                                message: '删除成功!'\n                            });\n                            //刷新\n                            this.fetchData()\n                        })\n                })\n            },\n            //根据id查询，数据回显\n            edit(id) {\n                //弹出框\n                this.dialogVisible = true\n                //调用接口查询\n                api.getUserId(id)\n                    .then(response => {\n                        this.$nextTick(function () {\n                            this.$refs.eltreeDept.setCheckedKeys([]);\n                            this.sysUser = response.data\n                        })\n                    })\n            },\n            //添加或者修改方法\n            saveOrUpdate() {\n\n                // 第三步,点击提交表单按钮的时候判断是否符合校验规则,符合才会往下运行,不符合会\n                // 按照你定义的校验规则提示警告\n                this.$refs.dataForm.validate((valid) => {\n                    if (valid) {\n                        this.sysUser.deptIds = this.$refs.eltreeDept.getCheckedKeys();\n                        if (!this.sysUser.id) {\n                            this.save()\n                        } else {\n                            this.update()\n                        }\n\n                    } else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n                });\n            },\n            //修改\n            update() {\n                api.update(this.sysUser)\n                    .then(response => {\n                        //提示\n                        this.$message.success('操作成功')\n                        //关闭弹框\n                        this.dialogVisible = false\n                        //刷新\n                        this.fetchData()\n                    })\n            },\n            //添加\n            save() {\n                api.save(this.sysUser)\n                    .then(response => {\n                        //提示\n                        this.$message.success('操作成功')\n                        //关闭弹框\n                        this.dialogVisible = false\n                        //刷新\n                        this.fetchData()\n                    })\n            },\n            //添加弹框的方法\n            add() {\n                this.dialogVisible = true\n                this.sysUser = {}\n                this.$nextTick(function () {\n                    this.$refs.eltreeDept.setCheckedKeys([]);\n                })\n            },\n            // 重置查询表单\n            resetData() {\n                console.log('重置查询表单')\n                this.searchObj = {}\n                this.createTimes = []\n                this.fetchData()\n            }\n\n        }\n    }\n</script>\n"]}]}
